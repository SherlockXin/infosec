<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	<display-name>infosec</display-name>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<error-page>
		<error-code>404</error-code>
		<location>/404.jsp</location>
	</error-page>

	<error-page>
		<error-code>403</error-code>
		<location>/403.jsp</location>
	</error-page>
	
	<!-- 会话管理器，防止多次登陆 -->
	<listener>
		<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
	</listener>
	
<!-- 生成验证码 -->
<servlet>    
   <description>用于生成验证码</description>    
   <display-name>生成验证码</display-name>    
   <servlet-name>GetCaptcha</servlet-name>    
   <servlet-class>infosec.vcode.GetCaptcha</servlet-class>    
</servlet>    
  
<servlet-mapping>    
  <servlet-name>GetCaptcha</servlet-name>    
  <url-pattern>/getcaptcha.sl</url-pattern>    
</servlet-mapping>   


	<servlet>
		<servlet-name>InfoSecServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:configs/dispatcher-servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>InfoSecServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	
 	<!-- 为cookie植入HttpOnly标识，防止cookie劫持 -->
	<session-config>
         <cookie-config> 
           <http-only>true</http-only>          
        </cookie-config>
 	</session-config>


	<!-- Spring IOC container 配置信息 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:configs/application-context.xml</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 使用Spring中的过滤器解决在请求和应答中的中文乱码问题 -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<!--强制转换编码(request和response均适用) -->
			<param-name>ForceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	    <!-- 配置Java Xss保护过滤器 -->
    <filter>
        <filter-name>xssFilter</filter-name>
        <filter-class>infosec.XssFilter.XssFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>xssFilter</filter-name>
        <servlet-name>/*</servlet-name>
    </filter-mapping>
    
    <!-- 配置防SQL注入保护过滤器 -->
    <filter>
        <filter-name>antiSqlInjection</filter-name>
        <filter-class>infosec.AntiSqlInjectionfilter.AntiSqlInjectionfilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>antiSqlInjection</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	
	
		<!-- 验证码 -->
	   <filter>
	  <filter-name>vcodeFilter</filter-name> 
	<filter-class>infosec.filter.ConfigFilter</filter-class> 
		</filter>
		 <filter-mapping>
		  <filter-name>vcodeFilter</filter-name> 
		<url-pattern>/j_spring_security_check</url-pattern>
		 </filter-mapping>  

	<!-- spring security 拦截器，实现用户认证与权限管理 --> 
	
	 <filter>
	  <filter-name>springSecurityFilterChain</filter-name> 
	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> 
		</filter>
		 <filter-mapping>
		  <filter-name>springSecurityFilterChain</filter-name> 
		<url-pattern>/*</url-pattern>
		 </filter-mapping> 





</web-app>